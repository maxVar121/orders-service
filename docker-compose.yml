services:
  kafka:
    image: bitnami/kafka:3.7.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_NUM_PARTITIONS: "1"
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: "1"
      KAFKA_CLUSTER_ID: WAccDHxfTFa_wYdF-7r_vQ
      KAFKA_DATA_DIR: /bitnami/kafka
      USER_ID: 0
      GROUP_ID: 0
    volumes:
      - kafka_:/bitnami/kafka
    networks:
      - app-network
    user: root
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c 'cat < /dev/null > /dev/tcp/localhost/9092' && echo 'OK' || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s

  app:
    build: .
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./order_cache.gob:/app/order_cache.gob
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app-network

volumes:
  kafka_:
    driver: local

networks:
  app-network:
    driver: bridge